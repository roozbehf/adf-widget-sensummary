!function(e,s){"use strict";angular.module("adf.widget.sensummary",["adf.provider"]).config(["dashboardProvider",function(e){e.widget("sensummary",{title:"Sensummary",description:"Summary of Sensu Check Reports",templateUrl:"{widgetsPath}/sensummary/src/view.html",reload:!0,edit:{templateUrl:"{widgetsPath}/sensummary/src/edit.html"},config:{},controller:"sensummaryCtrl",controllerAs:"swc"})}]),angular.module("adf.widget.sensummary").run(["$templateCache",function(e){e.put("{widgetsPath}/sensummary/src/edit.html","<form role=form><div class=form-group><label for=sensuAPI>Sensu API</label> <input type=text class=form-control id=sensuAPI ng-model=config.senserver></div><div class=form-group><label for=uchiwaURL>Uchiwa URL for the Datacenter</label> <input type=text class=form-control id=uchiwaURL ng-model=config.uchiwa_url></div></form>"),e.put("{widgetsPath}/sensummary/src/view.html",'<div><div class="alert alert-info" ng-if=!data>Please point the widget to a Sensu server in the configuration.</div><div ng-if=data><sensu-nodes data=data></sensu-nodes></div></div>')}]),angular.module("adf.widget.sensummary").directive("sensuNodes",["$window","$timeout","$interval",function(s,t,n){return{restrict:"E",scope:{data:"=",senserver:"=",label:"@",onClick:"&"},link:function(t,n,a){var r,o,i,l,c,u=30;s.onresize=function(){t.$apply()},t.$watch(function(){return angular.element(s)[0].innerWidth},function(){t.render(t.data)}),t.$watch("data",function(e){t.render(e)},!0),t.render=function(s){if(s){r||(o=1.7*Math.sqrt(u*u*t.data.nodes.length),i=o,l=o,c=i,r=d3.select(n[0]).append("svg").attr("width","100%").attr("height","100%").attr("class","bubble")),r.selectAll("*").remove();var a=d3.layout.force().nodes(d3.values(s.nodes)).gravity(.5).distance(30).charge(-7*u).size([l,c]).start();a.linkDistance(l/2);var d=r.selectAll(".node").data(s.nodes).enter().append("g").attr("class","node").call(a.drag),m=function(e){var s;switch(e.status){case 0:s="<span style='color: green' class='glyphicon glyphicon-ok-sign'></span>";break;case 1:s="<span style='color: yellow' class='glyphicon glyphicon-exclamation-sign'></span>";break;case 2:s="<span style='color: red' class='glyphicon glyphicon-remove-sign'></span>";break;default:s="<span class='glyphicon glyphicon-question-sign'></span>"}return s+" "+e.name+"<br><span style='color: #888888' class='glyphicon glyphicon-refresh'></span> <span class='updatetime'>updated "+e.lastUpdate+"</span>"},g=d3.tip().attr("class","d3-tip").offset([-10,0]).html(m);d.call(g);var f=function(e){switch(e.status){case 0:return"sensummary/src/img/circle-green.svg";case 1:return"sensummary/src/img/circle-yellow.svg";case 2:return"sensummary/src/img/circle-red.svg";default:return"sensummary/src/img/circle-grey.svg"}};d.append("image").attr("xlink:href",f).attr("x",-12).attr("y",-12).attr("width",u).attr("height",u).on("mouseover",g.show).on("mouseout",g.hide).on("dblclick",function(s){null!=s.url&&e.open(s.url,"_blank")}),a.on("tick",function(){d.attr("transform",function(e){return"translate("+e.x+", "+e.y+")"})})}}}}}]),angular.module("adf.widget.sensummary").controller("sensummaryCtrl",["$scope","$http","config",function(e,s,t,n){var a={nodes:[]};e.senserver=t.senserver,e.uchiwa_url=t.uchiwa_url,e.sensuConfig=!0;var r=function(){e.data=a,console.log("All node data is loaded."),e.$apply()},o=new Promise(function(t,n){s.get(e.senserver+"/clients").success(function(s){for(var n in s){var r=s[n].name,o={name:r,status:-1,url:e.uchiwa_url?e.uchiwa_url+"/"+r:null,lastUpdate:"few seconds ago"};a.nodes.push(o)}t(),console.log("Fetched the node list.")})}),i=function(){return new Promise(function(t,n){var r=[];for(var o in a.nodes)r.push(new Promise(function(t,n){var r=a.nodes[o];s.get(e.senserver+"/clients/"+r.name+"/history").success(function(e){r.status=-1;for(var s in e){var n=e[s];r.status=Math.max(r.status,n.last_status)}console.log("Fetched node status of '"+r.name+"' as "+r.status),t()})}));Promise.all(r).then(t())})};o.then(i).then(r)}]),angular.module("adf.widget.sensummary").service("sensuService",["$q","$http","githubApiUrl",function(e,s,t){return{getCommits:function(n){var a=e.defer(),r=t+n+"/commits?callback=JSON_CALLBACK";return s.jsonp(r).success(function(e){if(e&&e.meta){var s=e.meta.status;300>s?a.resolve(e.data):a.reject(e.data.message)}}).error(function(){a.reject()}),a.promise}}}])}(window);